import json

from multicloud_diagrams import MultiCloudDiagrams
from utils.utils import TestUtilities


def modify_content_between_markers(file_path, start_marker, end_marker, new_content):
    with open(file_path, 'r') as file:
        lines = file.readlines()

    new_lines = []
    skip = False
    added_content = False

    for line in lines:
        if start_marker in line:
            skip = True
            new_lines.append(line)
            new_lines.append(new_content + '\n')
            added_content = True
            continue
        if end_marker in line and skip:
            skip = False
        if not skip:
            new_lines.append(line)
        if end_marker in line and added_content:
            # new_lines.append(line)
            added_content = False

    with open(file_path, 'w') as file:
        file.writelines(new_lines)


class TestIconsGeneration(TestUtilities):

    def test_update_aws_icons(self):
        # load aws provider nodes
        file_paths = ['aws', 'onprem']

        md_content = '\n'

        for provider in file_paths:
            # Open and load the JSON file
            with open(f"./multicloud_diagrams/providers/{provider}.json", 'r') as file:
                provider_nodes = json.load(file)

            md_content += f"### {provider.upper()} nodes:\n"
            for service in provider_nodes.keys():
                # print(aws_service)
                service_data = provider_nodes.get(service, {})
                # Print the content for verification
                print(json.dumps(service_data, indent=4))

                # prepare icons md text
                md_content += f'[![{service}.jpg](https://github.com/tsypuk/multicloud-diagrams/raw/main/docs/icons/jpg/{service}.jpg?raw=True)]( https://tsypuk.github.io/multicloud-diagrams/docs/{provider}-components/{service}.html)\n'

                # given
                mcd = MultiCloudDiagrams()

                # when
                mcd.add_vertex(node_id=service, node_name=service, node_type=service, hide_name=True)
                mcd.export_to_file(f'./tmp/drawio/{service}.drawio')
            md_content += '\n'

        # update index.md file
        # Define the file path and markers
        start_marker = '## Supported Nodes Landscape (Autogenerated on-release):'
        end_marker = '---'

        # Call the function to modify content
        modify_content_between_markers('./docs/index.md', start_marker, end_marker, md_content)
        modify_content_between_markers('README.md', start_marker, end_marker, md_content)
